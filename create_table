#! /usr/bin/bash
shopt -s extglob
export LC_COLLATE=C

function main_menu() {
    
    # Give the user a menu to create, drop, or connect to a database
    select i in CreateDB ListDB DropDB ConnectDB Exit
    do
        case $i in
            "CreateDB")
                while true; do
                    read -p "Please Enter Database Name: " DBNAME
                    if [ -e "$DBNAME" ]; then
                        echo "Database is already exist"
                    else
                        case $DBNAME in
                            [0-9]*) # starts with number
                                echo "db name can't start with a number"
                                ;;
                            " "*)  # Starts with a space
                                echo "db name can't start with a space"
                                ;;
                            *" "*)  # Contains a space
                                echo "db name can't have spaces"
                                ;;
                            +([a-zA-Z0-9]))
                                mkdir "$DBNAME"
                                echo ""
                                echo "$DBNAME database created succefully"
                                echo ""
                                main_menu
                                break
                                ;;
                            *) # for regex
                                echo "db name name can't have regex and start only with letters"
                                ;;
                        esac
                    fi
                done
                ;;
            "ListDB")
                # List all databases and replace / with nothing
                echo "Databases List:"
                echo ""
                ls -F | grep / | sed 's/\/$//'
                echo ""
                main_menu
                ;;
            "DropDB")
                read -p "Please Enter Database Name: " DBNAME
                if [ -e "$DBNAME" ]; then
                    rm -r "$DBNAME"
                    echo ""
                    echo "$DBNAME database removed"
                    echo ""
                    main_menu
                else
                    echo "Database does not exist"
                fi
                ;;
            "ConnectDB")
                read -p "Please Enter Database Name: " DBNAME
                if [ -e "$DBNAME" ]; then
                    cd "$DBNAME" || exit
                    echo ""
                    echo "Connected to $DBNAME successfully"
                    echo ""

    #################### Start to show tables options (Create Select Insert Update Delete every option should be a separate script )
                    connect_menu

                else
                    echo "Database does not exist"
                fi
                ;;
            "Exit")
                    echo "exit DBENGINE..."
                    exit 0
                 ;;
            *)
                echo "Please enter a valid choice"
                ;;
        esac
    done
}

function connect_menu() {
    select j in Create_table List_tables Drop_tables Select Insert Update Delete Back
                    do
                        case $j in
                            # create two files for each table
                            "Create_table")
                                source ../../create_table                # run script of creating table                
                                ;;
                            "List_tables")
                                echo "Tables List:"
                                ls -F | grep -v "_metadata$"
                                ;;	
                            "Drop_tables")
                                read -p "Please Enter Table Name: " TBNAME
                                if [[ $(basename "$TBNAME" | tail -c 10) == "_metadata" ]]; then
                                    echo "table does not exist"
                                else
                                    if [ -e "$TBNAME" ]; then
                                        rm "$TBNAME";
                                        rm "$TBNAME"_metadata
                                        echo "$TBNAME table removed"
                                    else
                                        echo "table does not exist"
                                    fi
                                fi
                                ;;
                            "Select")
                                source ../../select
                                ;;	 
                            "Insert")
                                source ../../insert
                                ;; 
                            "Update")
                                source ../../update
                                ;;
                            "Delete")
                                source ../../delete
                                ;;
                            "Back")
                                    cd ..
                                    main_menu
                                    break
                                ;;
                            *)
                                echo "Please enter a valid choice"
                                ;;
                        esac
                    done
}



while true; do
    read -p "Please Enter Table Name: " TBNAME
    if [ -e "$TBNAME" ];
     then
        echo "Table is already exist"
    else
        case $TBNAME in
            [0-9]*) # starts with number
                    echo "Table name can't start with a number"
                ;;
            " "*)  # Starts with a space
                    echo "Table name can't start with a space"
                ;;
            *" "*)  # Contains a space
                    echo "Table name can't have spaces"
                ;;
            +([a-zA-Z0-9]))
                touch "$TBNAME"
                touch "$TBNAME"_metadata
                echo "$TBNAME table created"
                #create table metadata
                    # take number of columns
                    while true; do
                    read -p "Please Enter Number of columns: " column_number
                    case $column_number in
                        [0-9]|[1-7][0-9]|80) # number less than 80
                        #create meta data                             
                            pk_flag=0                                  
                            for ((i=1; i<=$column_number; i++)) 
                            do
                            pk=0 
                                # take name
                                while true; do
                                    read -p "Please Enter column $i name: " column_name
                                    table="$TBNAME" # variable to pass to awk
                                    if awk -v table="$table" -v name="$column_name" -F: '$1 == name { found=1; exit } END { exit !found }' ./"$table"_metadata
                                    then
                                        echo "Column name $column_name already exists"
                                    else
                                        case $column_name in 
                                            [0-9]*) # starts with number
                                                echo "column_name can't start with a number"
                                                ;;
                                            " "*)  # Starts with a space
                                                echo "column_name can't start with a space"
                                                ;;
                                            *" "*)  # Contains a space
                                                echo "column_name can't have spaces"
                                                ;;
                                            +([a-zA-Z0-9]))
                                                # take type
                                                while true; do
                                                    read -p "Please Enter column $i type [int/string]: " column_type
                                                    case $column_type in
                                                                [iI][nN][tT])
                                                                    column_type="int"
                                                                    echo "$column_name type is $column_type"
                                                                    break
                                                                    ;;
                                                                [sS][tT][rR][iI][nN][gG])
                                                                    column_type="string"
                                                                    echo "$column_name type is $column_type"
                                                                    break
                                                                    ;;
                                                                *)
                                                                    echo "please enter a valid choice" 
                                                            esac
                                                done
                                                    if [ $pk_flag -eq 0 ]; then
                                                        while true; do
                                                            read -p "is this column PK ? [y/n]" pk_no
                                                            case $pk_no in
                                                                [yY])
                                                                    pk=1
                                                                    pk_flag=1
                                                                    break
                                                                    ;;
                                                                [nN])
                                                                    break
                                                                    ;;
                                                                *)
                                                                    echo "please enter a valid choice" 
                                                            esac
                                                        done 
                                                    fi
                                                break
                                                ;;
                                            *) # for regex
                                                echo "column_name name can't have regex and start only with letters"
                                        esac
                                    fi
                                done
                                echo "$column_name:$column_type:$pk" >> ./"$table"_metadata
                                echo "$column_name column created with type $column_type"
                            done
                            break
                                ;;
                        (8[1-9]|9[0-9]|100)
                            echo "can't have more than 80 columns"
                                ;;
                        " "*)  # Starts with a space
                            echo "please enter a valid number"
                                ;;
                        *" "*)  # Contains a space
                            echo "please enter a valid number"
                                ;;
                        +([a-zA-Z]))
                            echo "please enter a valid number"
                                ;;
                        *) # for zero or -negative nums
                            echo "please enter a valid number"
                        esac
                    done
                    echo ""
                    echo "$TBNAME table created successfully"
                    echo ""
                    connect_menu
                    break
                ;;
            *) # for regex
                echo "Table name can't have regex and start only with letters"
        esac
    fi
done          
                            